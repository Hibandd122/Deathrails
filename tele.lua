-- Khai b√°o d·ªãch v·ª• Players
local Players = game:GetService("Players")
local player = Players.LocalPlayer

-- L·∫•y nh√¢n v·∫≠t v√† HumanoidRootPart
local character = player.Character or player.CharacterAdded:Wait()
local humanoidRootPart = character:WaitForChild("HumanoidRootPart")
local humanoid = character:WaitForChild("Humanoid")

-- V·ªã tr√≠ ƒë·∫ßu ti√™n (ƒëi b·ªô)
local firstPosition = Vector3.new(19.760950088500977, 3.6000008583068848, 124.74312591552734)

-- Danh s√°ch v·ªã tr√≠ teleport
local teleportPositions = {
    Vector3.new(25.15083885192871, 7.046726703643799, 125.3345718383789),
    Vector3.new(31.887962341308594, 7.599999904632568, 125.32569885253906)
}

-- Danh s√°ch TeleportZones
local teleportZones = {
    workspace.TeleportZones.TeleportZone,
    workspace.TeleportZones.TeleportZone1,
    workspace.TeleportZones.TeleportZone2,
    workspace.TeleportZones.TeleportZone3
}

-- H√†m di chuy·ªÉn ƒë·∫øn v·ªã tr√≠
local function moveToPosition(targetPosition)
    if humanoid then
        local maxAttempts = 5
        local attempt = 0
        local success = false

        while attempt < maxAttempts do
            humanoid:MoveTo(targetPosition)
            humanoid.MoveToFinished:Wait()
            
            -- Ki·ªÉm tra n·∫øu ƒë√£ ƒë·∫øn n∆°i
            local currentPos = humanoidRootPart.Position
            if (currentPos - targetPosition).Magnitude < 2 then
                success = true
                break
            end

            attempt += 1
            task.wait(0.5)
        end

        if not success then
            print("Di chuy·ªÉn th·∫•t b·∫°i, c∆∞·ª°ng ch·∫ø ƒë·∫∑t v·ªã tr√≠")
            humanoidRootPart.CFrame = CFrame.new(targetPosition)
        else
            print("ƒê√£ di chuy·ªÉn th√†nh c√¥ng!")
        end
    end
end

-- H√†m ki·ªÉm tra n·∫øu nh√¢n v·∫≠t ƒë√£ ·ªü trong m·ªôt TeleportZone
local function isPlayerInAnyZone()
    for _, zone in ipairs(teleportZones) do
        if zone.PrimaryPart and (humanoidRootPart.Position - zone.PrimaryPart.Position).Magnitude < 3 then
            print("Ng∆∞·ªùi ch∆°i ƒë√£ ·ªü trong TeleportZone!")
            return true
        end
    end
    return false
end

-- H√†m t√¨m TeleportZone g·∫ßn nh·∫•t ƒëang "Waiting for players..."
local function findNearestTeleportZone()
    local nearestZone = nil
    local minDistance = math.huge

    for _, zone in ipairs(teleportZones) do
        local stateLabel = zone:FindFirstChild("BillboardGui") and zone.BillboardGui:FindFirstChild("StateLabel")
        local zonePosition = zone.PrimaryPart and zone.PrimaryPart.Position

        if stateLabel and stateLabel.Text == "Waiting for players..." and zonePosition then
            local distance = (humanoidRootPart.Position - zonePosition).Magnitude
            if distance < minDistance then
                minDistance = distance
                nearestZone = zone
            end
        end
    end

    return nearestZone
end

-- H√†m t·∫°o party (g·ªçi li√™n t·ª•c)
local function createParty()
    while true do
        local args = {
            [1] = { ["maxPlayers"] = 1 }
        }
        game:GetService("ReplicatedStorage"):WaitForChild("Shared"):WaitForChild("RemotePromise"):WaitForChild("Remotes"):WaitForChild("C_CreateParty"):FireServer(unpack(args))
        print("ƒê√£ g·ª≠i y√™u c·∫ßu t·∫°o party!")
        task.wait(1) -- L·∫∑p l·∫°i m·ªói gi√¢y
    end
end

-- Di chuy·ªÉn ƒë·∫øn TeleportZone ch√≠nh x√°c v√† g·ªçi createParty()
local function moveToTeleportZone()
    -- N·∫øu ƒë√£ ·ªü trong TeleportZone, kh√¥ng c·∫ßn di chuy·ªÉn, g·ªçi createParty() lu√¥n
    if isPlayerInAnyZone() then
        task.spawn(createParty)
        return true
    end

    local timeout = 20
    local elapsedTime = 0

    while elapsedTime < timeout do
        local nearestZone = findNearestTeleportZone()

        if nearestZone then
            -- G·ªçi createParty() li√™n t·ª•c khi t√¨m th·∫•y zone ph√π h·ª£p
            task.spawn(createParty)

            local zonePosition = nearestZone.PrimaryPart.Position
            local distance = (humanoidRootPart.Position - zonePosition).Magnitude

            if distance > 3 then
                print("ƒêang di chuy·ªÉn ƒë·∫øn TeleportZone g·∫ßn nh·∫•t...")
                moveToPosition(zonePosition)
            else
                print("ƒê√£ ƒë·∫øn ƒë√∫ng TeleportZone!")
                return true
            end
        end

        task.wait(1)
        elapsedTime += 1
    end

    print("Kh√¥ng t√¨m th·∫•y TeleportZone h·ª£p l·ªá sau 20 gi√¢y!")
    return false
end

-- H√†m th·ª±c hi·ªán to√†n b·ªô qu√° tr√¨nh
local function teleportSequence()
    -- üîπ B∆Ø·ªöC 1: ƒêi b·ªô ƒë·∫øn `firstPosition`
    moveToPosition(firstPosition)

    -- üîπ B∆Ø·ªöC 2: D·ªãch chuy·ªÉn ƒë·∫øn t·∫•t c·∫£ `teleportPositions`
    for _, position in ipairs(teleportPositions) do
        humanoidRootPart.CFrame = CFrame.new(position)
        print("ƒê√£ d·ªãch chuy·ªÉn ƒë·∫øn: X = " .. position.X .. ", Y = " .. position.Y .. ", Z = " .. position.Z)
        task.wait(0.5)
    end

    -- üîπ B∆Ø·ªöC 3: T√¨m v√† di chuy·ªÉn ƒë·∫øn TeleportZone ch√≠nh x√°c, ƒë·ªìng th·ªùi g·ªçi createParty()
    local foundZone = moveToTeleportZone()

    if foundZone then
        print("ƒê√£ ho√†n th√†nh to√†n b·ªô quy tr√¨nh!")
    else
        print("Kh√¥ng th·ªÉ t√¨m th·∫•y TeleportZone h·ª£p l·ªá!")
    end
end

-- Ch·∫°y chu·ªói d·ªãch chuy·ªÉn
task.spawn(teleportSequence)
